{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code King\\\\Dev\\\\chatApp\\\\frontend\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  userId\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Fetch conversation history from the backend\n  const fetchChatHistory = async () => {\n    try {\n      const response = await axios.get(`/api/chat/${userId}`);\n      setChatHistory(response.data);\n    } catch (error) {\n      console.error('Error fetching chat history:', error);\n    }\n  };\n\n  // Auto-scroll to the bottom whenever the chat history updates\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Send message to the backend\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    setLoading(true);\n    try {\n      // Optimistically add user's message to the chat history\n      setChatHistory(prev => [...prev, {\n        role: 'user',\n        message\n      }]);\n      const response = await axios.post('/api/chat', {\n        userId,\n        message\n      });\n      // Update chat history with full conversation including AI reply\n      setChatHistory(response.data.history);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Send message on Enter key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  useEffect(() => {\n    fetchChatHistory();\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll',\n        marginBottom: '10px'\n      },\n      children: [chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          whiteSpace: 'pre-wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [entry.role === 'user' ? 'You' : 'Assistant', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), \" \", entry.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\",\n        style: {\n          width: '75%',\n          padding: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading,\n        style: {\n          padding: '8px 16px',\n          marginLeft: '5px'\n        },\n        children: loading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"Cv45MdzkP0E1NOknE0lgnFAoorA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Chat","userId","_s","message","setMessage","chatHistory","setChatHistory","loading","setLoading","messagesEndRef","fetchChatHistory","response","get","data","error","console","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","prev","role","post","history","handleKeyPress","e","key","children","style","border","padding","height","overflowY","marginBottom","map","entry","index","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","target","onKeyPress","placeholder","width","onClick","disabled","marginLeft","_c","$RefreshReg$"],"sources":["E:/Code King/Dev/chatApp/frontend/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Chat({ userId }) {\r\n  const [message, setMessage] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Fetch conversation history from the backend\r\n  const fetchChatHistory = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/chat/${userId}`);\r\n      setChatHistory(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching chat history:', error);\r\n    }\r\n  };\r\n\r\n  // Auto-scroll to the bottom whenever the chat history updates\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Send message to the backend\r\n  const sendMessage = async () => {\r\n    if (!message.trim()) return;\r\n    setLoading(true);\r\n    try {\r\n      // Optimistically add user's message to the chat history\r\n      setChatHistory(prev => [...prev, { role: 'user', message }]);\r\n      \r\n      const response = await axios.post('/api/chat', { userId, message });\r\n      // Update chat history with full conversation including AI reply\r\n      setChatHistory(response.data.history);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Send message on Enter key press\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChatHistory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chatHistory]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          border: '1px solid #ccc',\r\n          padding: '10px',\r\n          height: '300px',\r\n          overflowY: 'scroll',\r\n          marginBottom: '10px'\r\n        }}\r\n      >\r\n        {chatHistory.map((entry, index) => (\r\n          <div key={index} style={{ marginBottom: '10px', whiteSpace: 'pre-wrap' }}>\r\n            <strong>{entry.role === 'user' ? 'You' : 'Assistant'}:</strong> {entry.message}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Type your message...\"\r\n          style={{ width: '75%', padding: '8px' }}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          disabled={loading}\r\n          style={{ padding: '8px 16px', marginLeft: '5px' }}\r\n        >\r\n          {loading ? 'Sending...' : 'Send'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}